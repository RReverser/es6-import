{
	"type": "Program",
	"body": [
		{
			"type": "VariableDeclaration",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "es6i__modules"
					},
					"init": {
						"type": "ObjectExpression",
						"properties": []
					}
				}
			],
			"kind": "var"
		},
		{
			"type": "FunctionDeclaration",
			"id": {
				"type": "Identifier",
				"name": "es6i__define"
			},
			"params": [
				{
					"type": "Identifier",
					"name": "name"
				},
				{
					"type": "Identifier",
					"name": "module"
				}
			],
			"defaults": [],
			"body": {
				"type": "BlockStatement",
				"body": [
					{
						"type": "ExpressionStatement",
						"expression": {
							"type": "AssignmentExpression",
							"operator": "=",
							"left": {
								"type": "MemberExpression",
								"computed": true,
								"object": {
									"type": "Identifier",
									"name": "es6i__modules"
								},
								"property": {
									"type": "Identifier",
									"name": "name"
								}
							},
							"right": {
								"type": "FunctionExpression",
								"id": null,
								"params": [],
								"defaults": [],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "VariableDeclaration",
											"declarations": [
												{
													"type": "VariableDeclarator",
													"id": {
														"type": "Identifier",
														"name": "exports"
													},
													"init": {
														"type": "ObjectExpression",
														"properties": []
													}
												}
											],
											"kind": "var"
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "MemberExpression",
													"computed": true,
													"object": {
														"type": "Identifier",
														"name": "es6i__modules"
													},
													"property": {
														"type": "Identifier",
														"name": "name"
													}
												},
												"right": {
													"type": "FunctionExpression",
													"id": null,
													"params": [],
													"defaults": [],
													"body": {
														"type": "BlockStatement",
														"body": [
															{
																"type": "ReturnStatement",
																"argument": {
																	"type": "Identifier",
																	"name": "exports"
																}
															}
														]
													},
													"rest": null,
													"generator": false,
													"expression": false
												}
											}
										},
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "CallExpression",
												"callee": {
													"type": "Identifier",
													"name": "module"
												},
												"arguments": [
													{
														"type": "FunctionExpression",
														"id": null,
														"params": [
															{
																"type": "Identifier",
																"name": "value"
															},
															{
																"type": "Identifier",
																"name": "name"
															}
														],
														"defaults": [],
														"body": {
															"type": "BlockStatement",
															"body": [
																{
																	"type": "IfStatement",
																	"test": {
																		"type": "BinaryExpression",
																		"operator": ">",
																		"left": {
																			"type": "MemberExpression",
																			"computed": false,
																			"object": {
																				"type": "Identifier",
																				"name": "arguments"
																			},
																			"property": {
																				"type": "Identifier",
																				"name": "length"
																			}
																		},
																		"right": {
																			"type": "Literal",
																			"value": 1,
																			"raw": "1"
																		}
																	},
																	"consequent": {
																		"type": "BlockStatement",
																		"body": [
																			{
																				"type": "IfStatement",
																				"test": {
																					"type": "BinaryExpression",
																					"operator": "===",
																					"left": {
																						"type": "UnaryExpression",
																						"operator": "typeof",
																						"argument": {
																							"type": "Identifier",
																							"name": "name"
																						}
																					},
																					"right": {
																						"type": "Literal",
																						"value": "object",
																						"raw": "'object'"
																					}
																				},
																				"consequent": {
																					"type": "BlockStatement",
																					"body": [
																						{
																							"type": "IfStatement",
																							"test": {
																								"type": "BinaryExpression",
																								"operator": "===",
																								"left": {
																									"type": "Identifier",
																									"name": "name"
																								},
																								"right": {
																									"type": "Literal",
																									"value": null,
																									"raw": "null"
																								}
																							},
																							"consequent": {
																								"type": "BlockStatement",
																								"body": [
																									{
																										"type": "ForInStatement",
																										"left": {
																											"type": "Identifier",
																											"name": "name"
																										},
																										"right": {
																											"type": "Identifier",
																											"name": "value"
																										},
																										"body": {
																											"type": "BlockStatement",
																											"body": [
																												{
																													"type": "ExpressionStatement",
																													"expression": {
																														"type": "AssignmentExpression",
																														"operator": "=",
																														"left": {
																															"type": "MemberExpression",
																															"computed": true,
																															"object": {
																																"type": "Identifier",
																																"name": "exports"
																															},
																															"property": {
																																"type": "Identifier",
																																"name": "name"
																															}
																														},
																														"right": {
																															"type": "MemberExpression",
																															"computed": true,
																															"object": {
																																"type": "Identifier",
																																"name": "value"
																															},
																															"property": {
																																"type": "Identifier",
																																"name": "name"
																															}
																														}
																													}
																												}
																											]
																										},
																										"each": false
																									}
																								]
																							},
																							"alternate": {
																								"type": "BlockStatement",
																								"body": [
																									{
																										"type": "VariableDeclaration",
																										"declarations": [
																											{
																												"type": "VariableDeclarator",
																												"id": {
																													"type": "Identifier",
																													"name": "mappings"
																												},
																												"init": {
																													"type": "Identifier",
																													"name": "name"
																												}
																											}
																										],
																										"kind": "var"
																									},
																									{
																										"type": "ForInStatement",
																										"left": {
																											"type": "Identifier",
																											"name": "name"
																										},
																										"right": {
																											"type": "Identifier",
																											"name": "mappings"
																										},
																										"body": {
																											"type": "BlockStatement",
																											"body": [
																												{
																													"type": "ExpressionStatement",
																													"expression": {
																														"type": "AssignmentExpression",
																														"operator": "=",
																														"left": {
																															"type": "MemberExpression",
																															"computed": true,
																															"object": {
																																"type": "Identifier",
																																"name": "exports"
																															},
																															"property": {
																																"type": "Identifier",
																																"name": "name"
																															}
																														},
																														"right": {
																															"type": "MemberExpression",
																															"computed": true,
																															"object": {
																																"type": "Identifier",
																																"name": "value"
																															},
																															"property": {
																																"type": "MemberExpression",
																																"computed": true,
																																"object": {
																																	"type": "Identifier",
																																	"name": "mappings"
																																},
																																"property": {
																																	"type": "Identifier",
																																	"name": "name"
																																}
																															}
																														}
																													}
																												}
																											]
																										},
																										"each": false
																									}
																								]
																							}
																						}
																					]
																				},
																				"alternate": {
																					"type": "BlockStatement",
																					"body": [
																						{
																							"type": "ExpressionStatement",
																							"expression": {
																								"type": "AssignmentExpression",
																								"operator": "=",
																								"left": {
																									"type": "MemberExpression",
																									"computed": true,
																									"object": {
																										"type": "Identifier",
																										"name": "exports"
																									},
																									"property": {
																										"type": "Identifier",
																										"name": "name"
																									}
																								},
																								"right": {
																									"type": "Identifier",
																									"name": "value"
																								}
																							}
																						}
																					]
																				}
																			}
																		]
																	},
																	"alternate": {
																		"type": "BlockStatement",
																		"body": [
																			{
																				"type": "ExpressionStatement",
																				"expression": {
																					"type": "AssignmentExpression",
																					"operator": "=",
																					"left": {
																						"type": "Identifier",
																						"name": "exports"
																					},
																					"right": {
																						"type": "Identifier",
																						"name": "value"
																					}
																				}
																			}
																		]
																	}
																}
															]
														},
														"rest": null,
														"generator": false,
														"expression": false
													}
												]
											}
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "Identifier",
												"name": "exports"
											}
										}
									]
								},
								"rest": null,
								"generator": false,
								"expression": false
							}
						}
					}
				]
			},
			"rest": null,
			"generator": false,
			"expression": false
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "quickExamples",
						"raw": "'quickExamples'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "VariableDeclaration",
									"kind": "var",
									"declarations": [
										{
											"type": "VariableDeclarator",
											"id": {
												"type": "Identifier",
												"name": "$"
											},
											"init": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"object": {
														"type": "Identifier",
														"name": "es6i__modules"
													},
													"computed": true,
													"property": {
														"type": "Literal",
														"value": "jquery",
														"raw": "\"jquery\""
													}
												},
												"arguments": []
											}
										}
									]
								},
								{
									"type": "VariableDeclaration",
									"kind": "var",
									"declarations": [
										{
											"type": "VariableDeclarator",
											"id": {
												"type": "Identifier",
												"name": "encrypt"
											},
											"init": {
												"type": "MemberExpression",
												"object": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"object": {
															"type": "Identifier",
															"name": "es6i__modules"
														},
														"computed": true,
														"property": {
															"type": "Literal",
															"value": "crypto",
															"raw": "\"crypto\""
														}
													},
													"arguments": []
												},
												"property": {
													"type": "Identifier",
													"name": "encrypt"
												}
											}
										},
										{
											"type": "VariableDeclarator",
											"id": {
												"type": "Identifier",
												"name": "decrypt"
											},
											"init": {
												"type": "MemberExpression",
												"object": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"object": {
															"type": "Identifier",
															"name": "es6i__modules"
														},
														"computed": true,
														"property": {
															"type": "Literal",
															"value": "crypto",
															"raw": "\"crypto\""
														}
													},
													"arguments": []
												},
												"property": {
													"type": "Identifier",
													"name": "decrypt"
												}
											}
										}
									]
								},
								{
									"type": "VariableDeclaration",
									"kind": "var",
									"declarations": [
										{
											"type": "VariableDeclarator",
											"id": {
												"type": "Identifier",
												"name": "enc"
											},
											"init": {
												"type": "MemberExpression",
												"object": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"object": {
															"type": "Identifier",
															"name": "es6i__modules"
														},
														"computed": true,
														"property": {
															"type": "Literal",
															"value": "crypto",
															"raw": "\"crypto\""
														}
													},
													"arguments": []
												},
												"property": {
													"type": "Identifier",
													"name": "encrypt"
												}
											}
										}
									]
								},
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "CallExpression",
										"callee": {
											"type": "Identifier",
											"name": "export"
										},
										"arguments": [
											{
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"object": {
														"type": "Identifier",
														"name": "es6i__modules"
													},
													"computed": true,
													"property": {
														"type": "Literal",
														"value": "crypto",
														"raw": "\"crypto\""
													}
												},
												"arguments": []
											},
											{
												"type": "Literal",
												"value": null
											}
										]
									}
								},
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "CallExpression",
										"callee": {
											"type": "Identifier",
											"name": "export"
										},
										"arguments": [
											{
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"object": {
														"type": "Identifier",
														"name": "es6i__modules"
													},
													"computed": true,
													"property": {
														"type": "Literal",
														"value": "crypto",
														"raw": "\"crypto\""
													}
												},
												"arguments": []
											},
											{
												"type": "ObjectExpression",
												"properties": [
													{
														"type": "Property",
														"key": {
															"type": "Literal",
															"value": "foo"
														},
														"value": {
															"type": "Literal",
															"value": "foo"
														}
													},
													{
														"type": "Property",
														"key": {
															"type": "Literal",
															"value": "barrrr"
														},
														"value": {
															"type": "Literal",
															"value": "bar"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "Math"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "Identifier",
							"name": "es6i__modules"
						},
						"computed": true,
						"property": {
							"type": "Literal",
							"value": "math",
							"raw": "'math'"
						}
					}
				}
			]
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "alert"
				},
				"arguments": [
					{
						"type": "BinaryExpression",
						"operator": "+",
						"left": {
							"type": "Literal",
							"value": "2π = ",
							"raw": "\"2π = \""
						},
						"right": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"computed": false,
								"object": {
									"type": "Identifier",
									"name": "Math"
								},
								"property": {
									"type": "Identifier",
									"name": "sum"
								}
							},
							"arguments": [
								{
									"type": "MemberExpression",
									"computed": false,
									"object": {
										"type": "Identifier",
										"name": "Math"
									},
									"property": {
										"type": "Identifier",
										"name": "pi"
									}
								},
								{
									"type": "MemberExpression",
									"computed": false,
									"object": {
										"type": "Identifier",
										"name": "Math"
									},
									"property": {
										"type": "Identifier",
										"name": "pi"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "drawShape"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"object": {
									"type": "Identifier",
									"name": "es6i__modules"
								},
								"computed": true,
								"property": {
									"type": "Literal",
									"value": "shape",
									"raw": "'shape'"
								}
							},
							"arguments": []
						},
						"property": {
							"type": "Identifier",
							"name": "draw"
						}
					}
				}
			]
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "drawGun"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"object": {
									"type": "Identifier",
									"name": "es6i__modules"
								},
								"computed": true,
								"property": {
									"type": "Literal",
									"value": "cowboy",
									"raw": "'cowboy'"
								}
							},
							"arguments": []
						},
						"property": {
							"type": "Identifier",
							"name": "draw"
						}
					}
				}
			]
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "widgets",
						"raw": "'widgets'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": []
						}
					}
				]
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "widgets/button",
						"raw": "'widgets/button'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": []
						}
					}
				]
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "widgets/alert",
						"raw": "'widgets/alert'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": []
						}
					}
				]
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "widgets/textarea",
						"raw": "'widgets/textarea'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": []
						}
					}
				]
			}
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "messageBox"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"object": {
									"type": "Identifier",
									"name": "es6i__modules"
								},
								"computed": true,
								"property": {
									"type": "Literal",
									"value": "widgets/alert",
									"raw": "'widgets/alert'"
								}
							},
							"arguments": []
						},
						"property": {
							"type": "Identifier",
							"name": "messageBox"
						}
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "confirmDialog"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"object": {
									"type": "Identifier",
									"name": "es6i__modules"
								},
								"computed": true,
								"property": {
									"type": "Literal",
									"value": "widgets/alert",
									"raw": "'widgets/alert'"
								}
							},
							"arguments": []
						},
						"property": {
							"type": "Identifier",
							"name": "confirmDialog"
						}
					}
				}
			]
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "JSON"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "Identifier",
							"name": "es6i__modules"
						},
						"computed": true,
						"property": {
							"type": "Literal",
							"value": "http://json.org/modules/json2.js",
							"raw": "'http://json.org/modules/json2.js'"
						}
					}
				}
			]
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "alert"
				},
				"arguments": [
					{
						"type": "CallExpression",
						"callee": {
							"type": "MemberExpression",
							"computed": false,
							"object": {
								"type": "Identifier",
								"name": "JSON"
							},
							"property": {
								"type": "Identifier",
								"name": "stringify"
							}
						},
						"arguments": [
							{
								"type": "ObjectExpression",
								"properties": [
									{
										"type": "Property",
										"key": {
											"type": "Literal",
											"value": "hi",
											"raw": "'hi'"
										},
										"value": {
											"type": "Literal",
											"value": "world",
											"raw": "'world'"
										},
										"kind": "init",
										"method": false,
										"shorthand": false
									}
								]
							}
						]
					}
				]
			}
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "YUI"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "Identifier",
							"name": "es6i__modules"
						},
						"computed": true,
						"property": {
							"type": "Literal",
							"value": "http://developer.yahoo.com/modules/yui3.js",
							"raw": "'http://developer.yahoo.com/modules/yui3.js'"
						}
					}
				}
			]
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "alert"
				},
				"arguments": [
					{
						"type": "CallExpression",
						"callee": {
							"type": "MemberExpression",
							"computed": false,
							"object": {
								"type": "MemberExpression",
								"computed": false,
								"object": {
									"type": "MemberExpression",
									"computed": false,
									"object": {
										"type": "Identifier",
										"name": "YUI"
									},
									"property": {
										"type": "Identifier",
										"name": "dom"
									}
								},
								"property": {
									"type": "Identifier",
									"name": "Color"
								}
							},
							"property": {
								"type": "Identifier",
								"name": "toHex"
							}
						},
						"arguments": [
							{
								"type": "Literal",
								"value": "blue",
								"raw": "\"blue\""
							}
						]
					}
				]
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "Even",
						"raw": "'Even'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "VariableDeclaration",
									"kind": "var",
									"declarations": [
										{
											"type": "VariableDeclarator",
											"id": {
												"type": "Identifier",
												"name": "odd"
											},
											"init": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"object": {
														"type": "Identifier",
														"name": "es6i__modules"
													},
													"computed": true,
													"property": {
														"type": "Literal",
														"value": "Odd",
														"raw": "'Odd'"
													}
												},
												"arguments": []
											}
										}
									]
								},
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "CallExpression",
										"callee": {
											"type": "Identifier",
											"name": "export"
										},
										"arguments": [
											{
												"type": "FunctionExpression",
												"id": {
													"type": "Identifier",
													"name": "even"
												},
												"params": [
													{
														"type": "Identifier",
														"name": "n"
													}
												],
												"defaults": [],
												"body": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "ReturnStatement",
															"argument": {
																"type": "LogicalExpression",
																"operator": "||",
																"left": {
																	"type": "BinaryExpression",
																	"operator": "==",
																	"left": {
																		"type": "Identifier",
																		"name": "n"
																	},
																	"right": {
																		"type": "Literal",
																		"value": 0,
																		"raw": "0"
																	}
																},
																"right": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "Identifier",
																		"name": "odd"
																	},
																	"arguments": [
																		{
																			"type": "BinaryExpression",
																			"operator": "-",
																			"left": {
																				"type": "Identifier",
																				"name": "n"
																			},
																			"right": {
																				"type": "Literal",
																				"value": 1,
																				"raw": "1"
																			}
																		}
																	]
																}
															}
														}
													]
												},
												"rest": null,
												"generator": false,
												"expression": false
											}
										]
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "Odd",
						"raw": "'Odd'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "VariableDeclaration",
									"kind": "var",
									"declarations": [
										{
											"type": "VariableDeclarator",
											"id": {
												"type": "Identifier",
												"name": "even"
											},
											"init": {
												"type": "CallExpression",
												"callee": {
													"type": "MemberExpression",
													"object": {
														"type": "Identifier",
														"name": "es6i__modules"
													},
													"computed": true,
													"property": {
														"type": "Literal",
														"value": "Even",
														"raw": "'Even'"
													}
												},
												"arguments": []
											}
										}
									]
								},
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "CallExpression",
										"callee": {
											"type": "Identifier",
											"name": "export"
										},
										"arguments": [
											{
												"type": "FunctionExpression",
												"id": {
													"type": "Identifier",
													"name": "odd"
												},
												"params": [
													{
														"type": "Identifier",
														"name": "n"
													}
												],
												"defaults": [],
												"body": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "ReturnStatement",
															"argument": {
																"type": "LogicalExpression",
																"operator": "&&",
																"left": {
																	"type": "BinaryExpression",
																	"operator": "!=",
																	"left": {
																		"type": "Identifier",
																		"name": "n"
																	},
																	"right": {
																		"type": "Literal",
																		"value": 0,
																		"raw": "0"
																	}
																},
																"right": {
																	"type": "CallExpression",
																	"callee": {
																		"type": "Identifier",
																		"name": "even"
																	},
																	"arguments": [
																		{
																			"type": "BinaryExpression",
																			"operator": "-",
																			"left": {
																				"type": "Identifier",
																				"name": "n"
																			},
																			"right": {
																				"type": "Literal",
																				"value": 1,
																				"raw": "1"
																			}
																		}
																	]
																}
															}
														}
													]
												},
												"rest": null,
												"generator": false,
												"expression": false
											}
										]
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "DOMMunger",
						"raw": "'DOMMunger'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "CallExpression",
										"callee": {
											"type": "Identifier",
											"name": "export"
										},
										"arguments": [
											{
												"type": "FunctionExpression",
												"id": {
													"type": "Identifier",
													"name": "make"
												},
												"params": [
													{
														"type": "Identifier",
														"name": "domAPI"
													}
												],
												"defaults": [],
												"body": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "ReturnStatement",
															"argument": {
																"type": "ObjectExpression",
																"properties": [
																	{
																		"type": "Property",
																		"key": {
																			"type": "Identifier",
																			"name": "munge"
																		},
																		"value": {
																			"type": "FunctionExpression",
																			"id": null,
																			"params": [
																				{
																					"type": "Identifier",
																					"name": "doc"
																				}
																			],
																			"defaults": [],
																			"body": {
																				"type": "BlockStatement",
																				"body": [
																					{
																						"type": "ExpressionStatement",
																						"expression": {
																							"type": "CallExpression",
																							"callee": {
																								"type": "MemberExpression",
																								"computed": false,
																								"object": {
																									"type": "Identifier",
																									"name": "domAPI"
																								},
																								"property": {
																									"type": "Identifier",
																									"name": "alert"
																								}
																							},
																							"arguments": [
																								{
																									"type": "Literal",
																									"value": "hi!",
																									"raw": "'hi!'"
																								}
																							]
																						}
																					}
																				]
																			},
																			"rest": null,
																			"generator": false,
																			"expression": false
																		},
																		"kind": "init",
																		"method": false,
																		"shorthand": false
																	}
																]
															}
														}
													]
												},
												"rest": null,
												"generator": false,
												"expression": false
											},
											{
												"type": "Literal",
												"value": "make"
											}
										]
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "SafeDOM",
						"raw": "'SafeDOM'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "VariableDeclaration",
									"kind": "var",
									"declarations": [
										{
											"type": "VariableDeclarator",
											"id": {
												"type": "Identifier",
												"name": "alert"
											},
											"init": {
												"type": "MemberExpression",
												"object": {
													"type": "CallExpression",
													"callee": {
														"type": "MemberExpression",
														"object": {
															"type": "Identifier",
															"name": "es6i__modules"
														},
														"computed": true,
														"property": {
															"type": "Literal",
															"value": "DOM",
															"raw": "'DOM'"
														}
													},
													"arguments": []
												},
												"property": {
													"type": "Identifier",
													"name": "alert"
												}
											}
										}
									]
								},
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "CallExpression",
										"callee": {
											"type": "Identifier",
											"name": "export"
										},
										"arguments": [
											{
												"type": "ObjectExpression",
												"properties": [
													{
														"type": "Property",
														"key": {
															"type": "Identifier",
															"name": "write"
														},
														"value": {
															"type": "FunctionExpression",
															"id": null,
															"params": [
																{
																	"type": "Identifier",
																	"name": "txt"
																}
															],
															"defaults": [],
															"body": {
																"type": "BlockStatement",
																"body": [
																	{
																		"type": "ExpressionStatement",
																		"expression": {
																			"type": "CallExpression",
																			"callee": {
																				"type": "Identifier",
																				"name": "alert"
																			},
																			"arguments": [
																				{
																					"type": "Literal",
																					"value": "I'm sorry, Dave, I'm afraid I can't do that...",
																					"raw": "'I\\'m sorry, Dave, I\\'m afraid I can\\'t do that...'"
																				}
																			]
																		}
																	}
																]
															},
															"rest": null,
															"generator": false,
															"expression": false
														},
														"kind": "init",
														"method": false,
														"shorthand": false
													}
												]
											},
											{
												"type": "Literal",
												"value": "document"
											}
										]
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "DOMMunger"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "Identifier",
							"name": "es6i__modules"
						},
						"computed": true,
						"property": {
							"type": "Literal",
							"value": "DOMMunger",
							"raw": "'DOMMunger'"
						}
					}
				}
			]
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "SafeDOM"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "Identifier",
							"name": "es6i__modules"
						},
						"computed": true,
						"property": {
							"type": "Literal",
							"value": "SafeDOM",
							"raw": "'SafeDOM'"
						}
					}
				}
			]
		},
		{
			"type": "VariableDeclaration",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "instance"
					},
					"init": {
						"type": "CallExpression",
						"callee": {
							"type": "MemberExpression",
							"computed": false,
							"object": {
								"type": "Identifier",
								"name": "DOMMunger"
							},
							"property": {
								"type": "Identifier",
								"name": "make"
							}
						},
						"arguments": [
							{
								"type": "Identifier",
								"name": "SafeDOM"
							}
						]
					}
				}
			],
			"kind": "var"
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "es6i__define"
				},
				"arguments": [
					{
						"type": "Literal",
						"value": "counter",
						"raw": "'counter'"
					},
					{
						"type": "FunctionExpression",
						"params": [
							{
								"type": "Identifier",
								"name": "export"
							}
						],
						"body": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "VariableDeclaration",
									"declarations": [
										{
											"type": "VariableDeclarator",
											"id": {
												"type": "Identifier",
												"name": "n"
											},
											"init": {
												"type": "Literal",
												"value": 0,
												"raw": "0"
											}
										}
									],
									"kind": "var"
								},
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "CallExpression",
										"callee": {
											"type": "Identifier",
											"name": "export"
										},
										"arguments": [
											{
												"type": "FunctionExpression",
												"id": {
													"type": "Identifier",
													"name": "increment"
												},
												"params": [],
												"defaults": [],
												"body": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "ReturnStatement",
															"argument": {
																"type": "UpdateExpression",
																"operator": "++",
																"argument": {
																	"type": "Identifier",
																	"name": "n"
																},
																"prefix": false
															}
														}
													]
												},
												"rest": null,
												"generator": false,
												"expression": false
											},
											{
												"type": "Literal",
												"value": "increment"
											}
										]
									}
								},
								{
									"type": "ExpressionStatement",
									"expression": {
										"type": "CallExpression",
										"callee": {
											"type": "Identifier",
											"name": "export"
										},
										"arguments": [
											{
												"type": "FunctionExpression",
												"id": {
													"type": "Identifier",
													"name": "current"
												},
												"params": [],
												"defaults": [],
												"body": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "ReturnStatement",
															"argument": {
																"type": "Identifier",
																"name": "n"
															}
														}
													]
												},
												"rest": null,
												"generator": false,
												"expression": false
											},
											{
												"type": "Literal",
												"value": "current"
											}
										]
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "open"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"object": {
									"type": "Identifier",
									"name": "es6i__modules"
								},
								"computed": true,
								"property": {
									"type": "Literal",
									"value": "io/File",
									"raw": "'io/File'"
								}
							},
							"arguments": []
						},
						"property": {
							"type": "Identifier",
							"name": "open"
						}
					}
				},
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "close"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "CallExpression",
							"callee": {
								"type": "MemberExpression",
								"object": {
									"type": "Identifier",
									"name": "es6i__modules"
								},
								"computed": true,
								"property": {
									"type": "Literal",
									"value": "io/File",
									"raw": "'io/File'"
								}
							},
							"arguments": []
						},
						"property": {
							"type": "Identifier",
							"name": "close"
						}
					}
				}
			]
		},
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "Identifier",
					"name": "export"
				},
				"arguments": [
					{
						"type": "FunctionExpression",
						"id": {
							"type": "Identifier",
							"name": "scan"
						},
						"params": [
							{
								"type": "Identifier",
								"name": "folder"
							}
						],
						"defaults": [],
						"body": {
							"type": "BlockStatement",
							"body": [
								{
									"type": "TryStatement",
									"block": {
										"type": "BlockStatement",
										"body": [
											{
												"type": "VariableDeclaration",
												"declarations": [
													{
														"type": "VariableDeclarator",
														"id": {
															"type": "Identifier",
															"name": "h"
														},
														"init": {
															"type": "CallExpression",
															"callee": {
																"type": "Identifier",
																"name": "open"
															},
															"arguments": [
																{
																	"type": "Identifier",
																	"name": "folder"
																}
															]
														}
													}
												],
												"kind": "var"
											}
										]
									},
									"guardedHandlers": [],
									"handlers": [],
									"finalizer": {
										"type": "BlockStatement",
										"body": [
											{
												"type": "ExpressionStatement",
												"expression": {
													"type": "CallExpression",
													"callee": {
														"type": "Identifier",
														"name": "close"
													},
													"arguments": [
														{
															"type": "Identifier",
															"name": "h"
														}
													]
												}
											}
										]
									}
								}
							]
						},
						"rest": null,
						"generator": false,
						"expression": false
					},
					{
						"type": "Literal",
						"value": "scan"
					}
				]
			}
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "lexer"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "Identifier",
							"name": "es6i__modules"
						},
						"computed": true,
						"property": {
							"type": "Literal",
							"value": "compiler/Lexer",
							"raw": "'compiler/Lexer'"
						}
					}
				}
			]
		},
		{
			"type": "VariableDeclaration",
			"kind": "var",
			"declarations": [
				{
					"type": "VariableDeclarator",
					"id": {
						"type": "Identifier",
						"name": "shell"
					},
					"init": {
						"type": "MemberExpression",
						"object": {
							"type": "Identifier",
							"name": "es6i__modules"
						},
						"computed": true,
						"property": {
							"type": "Literal",
							"value": "shell",
							"raw": "'shell'"
						}
					}
				}
			]
		}
	]
}